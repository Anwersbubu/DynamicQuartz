#============================================================================
# Configure Main Scheduler Properties ?????
#============================================================================

# ?????????????????instanceId???????????instanceName????QuartzScheduler???????
org.quartz.scheduler.instanceName = MyClusteredScheduler
# Scheduler??ID??????????NON_CLUSTERED?????????SYS_PROP?????????id??????
org.quartz.scheduler.instanceId=AUTO
# ???id???????? SystemPropertyInstanceIdGenerator ??????? ?org.quartz.scheduler.instanceId?, ? HostnameInstanceIdGenerator ????? (InetAddress.getLocalHost().getHostName())??????????????org.quartz.simpl.SimpleInstanceIdGenerator??????
#org.quartz.scheduler.instanceIdGenerator.class = org.quartz.simpl.SimpleInstanceIdGenerator
# ???????????????????org.quartz.scheduler.instanceName???????????_QuartzSchedulerThread?.???instanceName+?_QuartzSchedulerThread???????
#org.quartz.scheduler.threadName =
# ??scheduler???????????????false??????
org.quartz.scheduler.makeSchedulerThreadDaemon=true
# ??Quartz???????????????????????????Quartz???????JDBCJobStore????????????????????????? ???????true?????????JNDI???????????????Quartz?????????false??????
#org.quartz.scheduler.threadsInheritContextClassLoaderOfInitializer = false
# ?????????????????????????????????????true??????XA?????????????????? 5000ms???????????????????????1000ms??????????30000??????
#org.quartz.scheduler.idleWaitTime = 30000
# ?????????????? RamJobStore?????????????15000??????
#org.quartz.scheduler.dbFailureRetryInterval = 15000
# ??????????????org.quartz.simpl.CascadingClassLoadHelper????????????????
#org.quartz.scheduler.classLoadHelper.class = org.quartz.simpl.CascadingClassLoadHelper
# ??JobFactory??(??)????????jobClass?????org.quartz.simpl.PropertySettingJobFactory??,???job??????????newInstance()?????job??PropertySettingJobFactory ?????????SchedulerContext? Job?Trigger? JobDataMaps??job bean???????JTA???????????????????
#org.quartz.scheduler.jobFactory.class = org.quartz.simpl.PropertySettingJobFactory
#org.quartz.context.key.SOME_KEY = none
# ??Quartz????UserTransaction????JNDI? URL?Websphere ??????????jta/usertransaction????Quartz??JobStoreCMT??????????????org.quartz.scheduler.wrapJobExecutionInUserTransaction?????true?????????java:comp/UserTransaction???????
#org.quartz.scheduler.userTransactionURL = java:comp/UserTransaction
# ?????Quartz?????job???UserTransaction??????????true?job?????JobDataMap??????????????false? ?????job???? @ExecuteInJTATransaction??, ????job??????????false??????
#org.quartz.scheduler.wrapJobExecutionInUserTransaction = false
# ??????org.terracotta.quartz.skipUpdateCheck=true?????????????quartz???????????false??????
#org.quartz.scheduler.skipUpdateCheck = true
# ?????????????????.????1????????????????????????????????????????????? > 1, ????? JDBC JobStore??, org.quartz.jobStore.acquireTriggersWithinLock???????true??????????????1?
#org.quartz.scheduler.batchTriggerAcquisitionMaxCount = 1
# ?????????????????????????????0??????
#org.quartz.scheduler.batchTriggerAcquisitionFireAheadTimeWindow = 0

#============================================================================
# Configure ThreadPool ?????
#============================================================================

# ??????????????????????????????null?????
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
# ?????????1??????(?????1-100???????)???-1?????
org.quartz.threadPool.threadCount:25
# ????????????java.lang.Thread.MAX_PRIORITY 10????Thread.MIN_PRIORITY 1????Thread.NORM_PRIORITY (5)??????
org.quartz.threadPool.threadPriority:5
# ------------------??SimpleThreadPool?????????????-------------------------------
# ?????????
org.quartz.threadPool.makeThreadsDaemons=true
#org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true
#org.quartz.threadpool.threadsinheritgroupofinitializingthread = false
#?????????[Scheduler Name]_Worker
#org.quartz.threadpool.threadnameprefix = swhJobThead;

# ------------------------??????(TriggerListener,JobListener) ???????????? ???????
# Configuring a Global TriggerListener ?????Trigger????
# MyTriggerListenerClass ???????????????? ???set?????2.2.x??????????????????
#org.quartz.triggerListener.NAME.class = com.swh.MyTriggerListenerClass
#org.quartz.triggerListener.NAME.propName = propValue
#org.quartz.triggerListener.NAME.prop2Name = prop2Value

#============================================================================
# Configure JobStore ?????????
#============================================================================

# ------------------------??RAMJobStore??
# ?schedule???????RAM????????????????????????????
#org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
# ????????????(????????misfired???)???????????????60??
#org.quartz.jobStore.misfireThreshold = 60000

# ------------------------??JDBCJobStore??
# ???quartz????job?Trigger????????????????,??????JobStoreTX(??????)?JobStoreCMT?application server??????????JTA?
org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
# ???Hibernate?dialect?????DB??????StdJDBCDelegate???????DB
org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# ?????
org.quartz.jobStore.tablePrefix=QRTZ_
# ????JDBCJobStore???JobDataMaps????????????????-?????????????????????????BLOB?????????true(????)
org.quartz.jobStore.useProperties = true
# ????????????????????????false???
org.quartz.jobStore.isClustered=true
# ????????????(????????misfired???)???????????????60??
org.quartz.jobStore.misfireThreshold=25000
# ??????????(??)?????????????????????????????????????Scheduler???????????????Job???????Scheduler???????????
org.quartz.jobStore.clusterCheckinInterval = 20000
# jobStore????????Job???
#org.quartz.jobStore.maxMisfiresToHandleAtATime = 20
# true/false,true???connection?setAutoCommit(false)??
org.quartz.jobStore.dontSetAutoCommitFalse = true
# ???SQL??????SELECT * FROM {0}LOCKS WHERE LOCK_NAME = ? FOR UPDATE
# {0}=$@org.quartz.jobStore.tablePrefix
#org.quartz.jobStore.selectWithLockSQL = true
# true/false, true???connection?setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE) ??
org.quartz.jobStore.txIsolationLevelSerializable = false
# ??job????????
org.quartz.jobStore.acquireTriggersWithinLock = true
# ???????????????????
#org.quartz.jobStore.lockHandler.class =